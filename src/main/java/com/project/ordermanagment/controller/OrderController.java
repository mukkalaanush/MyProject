package com.project.ordermanagment.controller;

import com.project.ordermanagment.dto.Cart;
import com.project.ordermanagment.dto.Orders;
import com.project.ordermanagment.repository.CartRepository;
import com.project.ordermanagment.repository.OrderRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/api/v1/orders") // This means URL's start with /demo (after Application path)
public class OrderController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private OrderRepository orderRepository;
	private CartRepository cartRepository;

	@PostMapping(path="/addtocart") // Map ONLY POST Requests
	public ResponseEntity<String> addItemToCart(@RequestBody Cart cart) {
		cartRepository.save(cart);
		return new ResponseEntity<>("Item Added to cart", HttpStatus.OK);
	}




	@PostMapping(path="/") // Map ONLY POST Requests
	public ResponseEntity<String> addNewOrder (@RequestBody Orders order) {
		orderRepository.save(order);
		return new ResponseEntity<>("Created", HttpStatus.OK);
	}

	@GetMapping(path="/")
	public ResponseEntity<Orders> getOrderByID(@RequestParam String orderId) {
		// This returns a JSON or XML with the user
		Orders order = orderRepository.findByOrderId(orderId);
		return new ResponseEntity<>(order,HttpStatus.OK);
	}

	@GetMapping(path="/all")
	public ResponseEntity<Iterable<Orders>> getAllOrders() {
		// This returns a JSON or XML with the users
		 Iterable<Orders> orders = orderRepository.findAll();
		 return new ResponseEntity<>(orders,HttpStatus.OK);
	}
}
